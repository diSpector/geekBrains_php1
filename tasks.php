<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Title</title>
    <link rel="stylesheet" href="style.css">
</head>
<body>
<?php
// контроллер - в зависимости от полученного номера задания из формы на Главной странице,
// подключает форму, соответствующую конкретному задаиню

$taskNum = $_POST['select']; // номер задания, полученный из формы на Главной странице
switch ($taskNum){
    case '1':
        //1. С помощью цикла while вывести все числа в промежутке от 0 до 100, которые делятся на 3 без остатка.
        // первое задание решается прямо здесь, отдельного файла не требуется
        $numbersDiv3 = []; // пустой массив, в который будут добавляться числа, которые делятся на 3 без остатка
        $i = 0;
        while ($i <= 100){
            if ($i % 3 === 0){
                $numbersDiv3[] = $i; // добавление в конец массива нового числа, которое делится на 3 без остатка
            }
            $i++;
        }
        // ниже вывод результата
    ?>
        <form action="index.php" method = "post">
            <h3>Результат</h3>
            Числа от 0 до 100, которые делятся на 3:<br>
            <?php echo implode(", ", $numbersDiv3) ?>
            <input type="submit" value="Вернуться">
        </form>
        <?php
        break;
    case '2':
//        2. С помощью цикла do…while написать функцию для вывода чисел от 0 до 10, чтобы результат выглядел так:
//          0 – это ноль.
//          1 – нечетное число.
//          2 – четное число.
//          3 – нечетное число.
//          …
//          10 – четное число.
        // решение здесь, отдельного файла не требуется
        function oddEven($num1, $num2) {
            do {
                if ($num1 === 0) {
                    echo "$num1 - это ноль <br>";
                } else if (($num1 % 2) === 0) {
                    echo "$num1 - четное число <br>";
                } else {
                    echo "$num1 - нечетное число <br>";
                }
                $num1++;
            } while ($num1 <= $num2);
        }
    ?>
        <form action="index.php" method="post">
            <h3>Результат</h3>
            Числа от 0 до 10:<br>
            <?php echo oddEven(0, 10);
            ?>
            <input type="submit" value="Вернуться">
        </form>
    <?php
        break;
    case '38':
// 3. Объявить массив, в котором в качестве ключей будут использоваться названия областей,
// а в качестве значений – массивы с названиями городов из соответствующей области.
// Вывести в цикле значения массива, чтобы результат был таким:
//
//    Московская область:
//    Москва, Зеленоград, Клин
//    Ленинградская область:
//    Санкт-Петербург, Всеволожск, Павловск, Кронштадт
//    Рязанская область

// 8. *Повторить третье задание, но вывести на экран только города, начинающиеся с буквы «К».

// При решении задания реализована проверка на то, что значение ключа может НЕ быть массивом
// (а быть просто строкой - например, 'Орловская область' => 'Орел'),
// а также что у ключа вообще может не быть значений - например, 'Краснодарский край'

        $regionsTowns = ['Московская область' => ['Балашиха', 'Видное', 'Красногорск', 'Москва', 'Ногинск', 'Реутов'],
                        'Ленинградская область' => ['Санкт-Петербург', 'Всеволожск', 'Павловск', 'Кронштадт'],
                        'Рязанская область' => ['Рязань', 'Касимов', 'Рыбное'],
                        'Орловская область' => 'Орел',
                        'Краснодарский край',
                        'Красноярский край' => 'Красноярск',
                        'Нижегородская область' => ['Нижний Новгород', 'Арзамас', 'Бор', 'Кстово']];
        // задание 3. Функция для вывода всех областей и городов
        function outputForTowns($towns){ // на входе - массив городов с областями
            foreach($towns as $key=>$value){ // пройтись по массиву городов
                if (is_array($value)){ // если значение ключа - массив, вывести его через implode
                    echo $key . ":<br>" . implode(", ",$value) . "<br><br>"; // вывод вида "область: список городов из вложенного массива, разделенных запятой" с помощью implode"
                } else if (!is_array($value) && !is_int($key)) { // если значение не массив, просто вывести строку "область: город"
                    echo $key . ":<br>" . $value . "<br><br>";
                } else { // иначе (если городов нет) вывести только область
                    echo $value . "<br><br>";
                }
            }
        }

        // задание 8. Функция для вывода только городов на букву "К"
        // т.к. возникли проблемы с кодировкой (кириллические символы занимают в 2 раза больше байтов),
        // в решении используется функциия mb_substr() вместо substr()
        function outputKTowns($towns){
            $kTowns = []; // инициализация пустого массива, в который будут записываться города, начинающиеся на букву "К"
            foreach ($towns as $key => $value) {
                if (is_array($value)){ // если значение ключа (области) - это массив городов, пройтись по нему
                    foreach ($value as $name){ // затем пройтись по каждому элементу массива - городу
                        if (mb_substr($name, 0 , 1) === 'К'){ // если первая буква - "К", добавить город в массив
                            $kTowns[] = $name;
                        }
                    }
                } else { // если значение - НЕ массив (строка), то провести дополнительную проверку,
                    // чтобы в список не попала область, начинающаяся на букву "К",
                    // в которой вообще нет городов или всего 1 город (строка, а не массив)
                    if ((mb_substr($value, 0 , 1) === 'К') && (!is_int($key))){ // если у ключа нет значения,
                        // то ключом становится число. Поэтому вводится доп. проверка - если ключ это число,
                        // то значит это область без городов и ее нужно пропустить
                        $kTowns[] = $value;
                    }
                }
            }
            $kTownsString = implode(', ', $kTowns);
            return $kTownsString;
        }
    ?>
        <form action="index.php" method="post">
            <h3>Результат</h3>
            <b>Все города и области:</b><br><br>
            <?php echo outputForTowns($regionsTowns); ?>
            <b>Города на букву "К":</b><br><br>
            <?php echo outputKTowns($regionsTowns); ?>

            <input type="submit" value="Вернуться">
        </form>
    <?php
        break;
    case '459':
        ?>
        <form action="task459.php" method="post">
            <h3>Введите слово или фразу на русском языке</h3>
            <input type="text" name="phraseURL">
            <input type="submit" value="Вывести результат">
        </form>
        <?php
        break;
    case '6':
        ?>
        <form action="task6.php" method="post">
            <h3>Нажмите на кнопку, чтобы перейти к решению</h3>
            <input type="submit" value="Перейти">
        </form>
        <?php
        break;
    case '7':
        //7. *Вывести с помощью цикла for числа от 0 до 9, НЕ используя тело цикла. То есть выглядеть должно так:
        //for (…){ // здесь пусто}
        ?>
        <form action="index.php" method="post">
            <h3>Результат</h3>
            Числа от 0 до 9:<br>
            <?php for($i = 0; $i < 10; print $i++ . "<br>"){} ?>
            <input type="submit" value="Вернуться">
        </form>
        <?php
        break;
        } ?>
</body>
</html>
